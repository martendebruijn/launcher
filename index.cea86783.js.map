{"mappings":"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","sources":["src/components/GreetingComponent.js","src/components/ButtonComponent.js","src/components/CardComponent.js","src/index.js","src/data/cards.js"],"sourcesContent":["/**\n * GreetingComponent\n *\n * A personal greeting\n *\n * **Props**:\n * - None\n */\nexport default class GreetingComponent extends HTMLElement {\n  /**\n   *\n   * @param {object} props - Component props\n   */\n  constructor(props) {\n    super()\n    this.props = props\n    const template = document.getElementById('greeting-component')\n    const shadow = this.attachShadow({ mode: 'open' })\n    const copy = template.content.cloneNode(true)\n    this.classList.add('inline-block')\n    const elements = {\n      emoji: copy.querySelector('span'),\n      greeting: copy.querySelector('div:first-child'),\n    }\n\n    const now = new Date()\n    const hour = now.getHours()\n    const text = {\n      emoji: 'âœ¨',\n      greeting: 'Goodmorning',\n    }\n\n    if (hour < 6 || hour >= 18) {\n      text.emoji = 'ðŸŒ™'\n      text.greeting = 'Goodevening'\n    } else if (hour >= 12) {\n      text.emoji = 'ðŸ‘‹'\n      text.greeting = 'Goodafternoon'\n    }\n\n    elements.emoji.textContent = text.emoji\n    elements.greeting.textContent = text.greeting\n    shadow.appendChild(copy)\n  }\n}\ncustomElements.define('greeting-component', GreetingComponent)\n","/**\n * ButtonComponent\n *\n * A button consisting of an image and text\n *\n * **Props**:\n * - `url`: String - button link\n * - `color`: String - button color\n * - `img`: Object - image object\n *     - `url`: String - image url\n *     - `alt`: String - image alt text\n * - `text`: String - button text\n */\nexport default class ButtonComponent extends HTMLElement {\n  /**\n   *\n   * @param {object} props - Component props\n   */\n  constructor(props) {\n    super()\n    this.props = props\n    const template = document.getElementById('button-component')\n    const shadow = this.attachShadow({ mode: 'open' })\n    const copy = template.content.cloneNode(true)\n    this.classList.add('inline-block')\n    const elements = {\n      link: copy.querySelector('a'),\n      iconWrapper: copy.querySelector('[data-name=\"iconWrapper\"]'),\n      icon: copy.querySelector('img'),\n      text: copy.querySelector('[data-name=\"text\"]'),\n    }\n\n    let classNames\n    switch (props.color) {\n      case 'red':\n        classNames = [\n          'bg-red-400',\n          'text-red-900',\n          'hover:bg-red-500',\n          'hover:text-red-100',\n        ]\n        break\n      case 'yellow':\n        classNames = [\n          'bg-yellow-400',\n          'text-yellow-900',\n          'hover:bg-yellow-500',\n          'hover:text-yellow-100',\n        ]\n        break\n      default:\n        classNames = [\n          'bg-gray-400',\n          'text-gray-900',\n          'hover:bg-gray-500',\n          'hover:text-gray-100',\n        ]\n        break\n    }\n\n    classNames.forEach((className) => {\n      elements.link.classList.add(className)\n    })\n\n    elements.link.href = props.url\n    elements.icon.src = props.img.url\n    elements.icon.alt = props.img.alt\n    elements.text.textContent = props.text\n\n    shadow.appendChild(copy)\n  }\n}\ncustomElements.define('button-component', ButtonComponent)\n","import ButtonComponent from './ButtonComponent'\n\n/**\n * CardComponent\n *\n * A card with buttons\n *\n *   **Props**:\n * - `header`: String - card header text\n * - `buttons`: Array - Array of ButtonComponent instances\n * - `color`: String - theme of card\n */\nexport default class CardComponent extends HTMLElement {\n  /**\n   *\n   * @param {object} props - Component props\n   */\n  constructor(props) {\n    super()\n    this.props = props\n    const template = document.getElementById('card-component')\n    const shadow = this.attachShadow({ mode: 'open' })\n    const copy = template.content.cloneNode(true)\n    this.classList.add('inline-block')\n    const elements = {\n      header: copy.querySelector('h3'),\n      list: copy.querySelector('ul'),\n      wrapper: copy.querySelector('div'),\n    }\n\n    let classNames\n    switch (props.color) {\n      case 'red':\n        classNames = ['bg-red-200', 'text-red-900']\n        break\n      case 'yellow':\n        classNames = ['bg-yellow-200', 'text-yellow-900']\n        break\n      default:\n        classNames = ['bg-gray-200', 'text-gray-900']\n        break\n    }\n    classNames.forEach((className) => {\n      elements.wrapper.classList.add(className)\n    })\n\n    props.buttons.forEach((button) => {\n      const listItem = document.createElement('li')\n      listItem.classList.add('list-none')\n      const buttonProps = { color: props.color, ...button }\n      const buttonInstance = new ButtonComponent(buttonProps)\n      elements.list.appendChild(listItem)\n      listItem.appendChild(buttonInstance)\n    })\n    elements.header.textContent = props.header\n\n    shadow.appendChild(copy)\n  }\n}\ncustomElements.define('card-component', CardComponent)\n","// Component imports\nimport GreetingComponent from './components/GreetingComponent'\nimport CardComponent from './components/CardComponent'\n\n// Data imports\nimport cards from './data/cards'\n\nconst elements = {\n  app: document.getElementById('app'),\n  greeting: document.getElementById('greeting'),\n  grid: document.getElementById('grid'),\n}\n\nfunction addComponent(target, Component, instance) {\n  const component = new Component(instance)\n  target.appendChild(component)\n}\n\naddComponent(elements.greeting, GreetingComponent)\ncards.forEach((card) => {\n  addComponent(elements.grid, CardComponent, card)\n})\n","export default [\n  {\n    header: 'Code something',\n    color: 'gray',\n    buttons: [\n      {\n        url: 'https://github.com/martendebruijn',\n        img: {\n          url: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg',\n          alt: 'GitHub logo',\n        },\n        text: 'GitHub',\n      },\n      {\n        url: 'https://gitlab.com/martendebruijn',\n        img: {\n          url: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/gitlab/gitlab-original.svg',\n          alt: 'GitLab logo',\n        },\n        text: 'GitLab',\n      },\n    ],\n  },\n  {\n    header: 'Watch something',\n    color: 'red',\n    buttons: [\n      {\n        url: 'https://netflix.com/browse/',\n        img: {\n          url: 'https://cdn.svgporn.com/logos/youtube-icon.svg',\n          alt: 'YouTube logo',\n        },\n        text: 'YouTube',\n      },\n      {\n        url: 'https://youtube.com/feed/subscriptions/',\n        img: {\n          url: 'https://cdn.svgporn.com/logos/netflix-icon.svg',\n          alt: 'Netflix logo',\n        },\n        text: 'Netflix',\n      },\n    ],\n  },\n  {\n    header: 'Do some work',\n    color: 'yellow',\n    buttons: [\n      {\n        url: 'https://intranet.mozard.nl/',\n        img: {\n          url: 'https://pbs.twimg.com/profile_images/1204058513879777280/p9hxd5Ea_400x400.jpg',\n          alt: 'Mozard logo',\n        },\n        text: 'Mozard',\n      },\n    ],\n  },\n]\n"],"names":["$e00442de1d18c16a$export$2e2bcd8739ae039","HTMLElement","constructor","props","super","this","template","document","getElementById","shadow","attachShadow","mode","copy","content","cloneNode","classList","add","elements","emoji","querySelector","greeting","hour","Date","getHours","text","textContent","appendChild","customElements","define","$95d47d3522c8387d$export$2e2bcd8739ae039","link","iconWrapper","icon","classNames","color","forEach","className","href","url","src","img","alt","$c1622b1766d54eea$export$2e2bcd8739ae039","header","list","wrapper","buttons","button","listItem","createElement","buttonProps","buttonInstance","$35da740d59af89ba$var$elements","app","grid","$35da740d59af89ba$var$addComponent","target","Component","instance","component","card"],"version":3,"file":"index.cea86783.js.map"}